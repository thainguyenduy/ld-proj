import 'package:meta/meta.dart';
import '../extensions/data_class_extensions.dart';
import '../tdapi.dart';

/// Represents a local file
@immutable
class LocalFile extends TdObject {
  const LocalFile({
    required this.path,
    required this.canBeDownloaded,
    required this.canBeDeleted,
    required this.isDownloadingActive,
    required this.isDownloadingCompleted,
    required this.downloadOffset,
    required this.downloadedPrefixSize,
    required this.downloadedSize,
  });

  /// [path] Local path to the locally available file part; may be empty
  final String path;

  /// [canBeDownloaded] True, if it is possible to download or generate the file
  final bool canBeDownloaded;

  /// [canBeDeleted] True, if the file can be deleted
  final bool canBeDeleted;

  /// [isDownloadingActive] True, if the file is currently being downloaded (or
  /// a local copy is being generated by some other means)
  final bool isDownloadingActive;

  /// [isDownloadingCompleted] True, if the local copy is fully available
  final bool isDownloadingCompleted;

  /// [downloadOffset] Download will be started from this offset.
  /// downloaded_prefix_size is calculated from this offset
  final int downloadOffset;

  /// [downloadedPrefixSize] If is_downloading_completed is false, then only
  /// some prefix of the file starting from download_offset is ready to be read.
  /// downloaded_prefix_size is the size of that prefix in bytes
  final int downloadedPrefixSize;

  /// [downloadedSize] Total downloaded file size, in bytes. Can be used only
  /// for calculating download progress. The actual file size may be bigger, and
  /// some parts of it may contain garbage
  final int downloadedSize;

  static const String constructor = 'localFile';

  static LocalFile? fromJson(Map<String, dynamic>? json) {
    if (json == null) {
      return null;
    }

    return LocalFile(
      path: json['path'] as String,
      canBeDownloaded: json['can_be_downloaded'] as bool,
      canBeDeleted: json['can_be_deleted'] as bool,
      isDownloadingActive: json['is_downloading_active'] as bool,
      isDownloadingCompleted: json['is_downloading_completed'] as bool,
      downloadOffset: json['download_offset'] as int,
      downloadedPrefixSize: json['downloaded_prefix_size'] as int,
      downloadedSize: json['downloaded_size'] as int,
    );
  }

  @override
  String getConstructor() => constructor;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'path': path,
        'can_be_downloaded': canBeDownloaded,
        'can_be_deleted': canBeDeleted,
        'is_downloading_active': isDownloadingActive,
        'is_downloading_completed': isDownloadingCompleted,
        'download_offset': downloadOffset,
        'downloaded_prefix_size': downloadedPrefixSize,
        'downloaded_size': downloadedSize,
        '@type': constructor,
      };

  @override
  bool operator ==(Object other) => overriddenEquality(other);

  @override
  int get hashCode => overriddenHashCode;
}
